name: CI Docker PHP # Nome do workflow no GitHub Actions

on: [push, pull_request] # Dispara o workflow em todo push/PR

jobs:
  build-test:
    runs-on: ubuntu-latest # Roda em máquina Ubuntu fornecida pelo GitHub

    services:
      mysql:
        image: mysql:8.3
        env:
          MYSQL_ROOT_PASSWORD: minhaSenhaSegura
          MYSQL_DATABASE: sistemaphp
        # Não exponha a porta do MySQL!
        # ports:
        #   - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
      - name: Checkout do código
        uses: actions/checkout@v4

      - name: Rodar Docker Compose
        run: docker compose up -d --build # Sobe containers do projeto e faz rebuild

      - name: Esperar web subir
        run: | # Aguarda até a aplicação responder no endpoint informado
          for i in {1..15}; do
            if curl -s http://localhost:8080 > /dev/null; then
              echo "Sistema está respondendo";
              break;
            fi;
            echo "Aguardando container web...";
            sleep 5;
          done

      - name: Verificar página inicial (teste automático)
        run: | # Teste simples: pede página inicial e busca por termo esperado
          curl -sSf http://localhost:8080 | grep -qi "Sistema PHP + Docker"
          # Substitua acima por uma palavra/texto presente na tela inicial do sistema

      - name: Instalar dependências para análise de código
        run: | # Instala PHPStan e PHPCS no container web para análise do código PHP
          docker exec $(docker ps -qf "name=web") bash -c "apt-get update && apt-get install -y wget git unzip"
          docker exec $(docker ps -qf "name=web") bash -c "wget https://github.com/phpstan/phpstan/releases/latest/download/phpstan.phar"
          docker exec $(docker ps -qf "name=web") bash -c "wget https://github.com/squizlabs/PHP_CodeSniffer/releases/download/3.7.1/phpcs.phar -O phpcs.phar"

      - name: Rodar PHPStan (análise estática)
        run: |
          docker exec $(docker ps -qf "name=web") bash -c "php phpstan.phar analyse /var/www/html --level=0 --error-format=table --memory-limit=512M > /var/www/html/phpstan-report.txt"

      - name: Rodar PHPCS (Padrão de Código)
        run: | # Analisa aderência ao padrão PSR-12 do PHP
          docker exec $(docker ps -qf "name=web") bash -c "php phpcs.phar --standard=PSR12 /var/www/html > /var/www/html/phpcs-report.txt || true"

      - name: Copiar relatórios do container para a máquina host
        run: | # Move relatórios para fora do container, para download como artefato
          docker cp $(docker ps -qf "name=web"):/var/www/html/phpstan-report.txt phpstan-report.txt
          docker cp $(docker ps -qf "name=web"):/var/www/html/phpcs-report.txt phpcs-report.txt

      - name: Upload Relatório PHPStan
        uses: actions/upload-artifact@v4 # Disponibiliza o relatório phpstan para download via Actions
        with:
          name: phpstan-report
          path: phpstan-report.txt

      - name: Upload Relatório PHPCS
        uses: actions/upload-artifact@v4 # Disponibiliza o relatório phpcs para download via Actions
        with:
          name: phpcs-report
          path: phpcs-report.txt

      - name: Fechar containers
        run: docker compose down # Encerra/limpa os containers usados nos testes
